/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const UserIndexLazyImport = createFileRoute('/user/')()
const ChangelogIndexLazyImport = createFileRoute('/changelog/')()
const ChangelogCreateLazyImport = createFileRoute('/changelog/create')()
const ChangelogIdLazyImport = createFileRoute('/changelog/$id')()
const ChangelogIdEditLazyImport = createFileRoute('/changelog/$id/edit')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const UserIndexLazyRoute = UserIndexLazyImport.update({
  path: '/user/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/user/index.lazy').then((d) => d.Route))

const ChangelogIndexLazyRoute = ChangelogIndexLazyImport.update({
  path: '/changelog/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/changelog.index.lazy').then((d) => d.Route),
)

const ChangelogCreateLazyRoute = ChangelogCreateLazyImport.update({
  path: '/changelog/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/changelog.create.lazy').then((d) => d.Route),
)

const ChangelogIdLazyRoute = ChangelogIdLazyImport.update({
  path: '/changelog/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/changelog.$id.lazy').then((d) => d.Route))

const ChangelogIdEditLazyRoute = ChangelogIdEditLazyImport.update({
  path: '/edit',
  getParentRoute: () => ChangelogIdLazyRoute,
} as any).lazy(() =>
  import('./routes/changelog.$id.edit.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/changelog/$id': {
      id: '/changelog/$id'
      path: '/changelog/$id'
      fullPath: '/changelog/$id'
      preLoaderRoute: typeof ChangelogIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/changelog/create': {
      id: '/changelog/create'
      path: '/changelog/create'
      fullPath: '/changelog/create'
      preLoaderRoute: typeof ChangelogCreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/changelog/': {
      id: '/changelog/'
      path: '/changelog'
      fullPath: '/changelog'
      preLoaderRoute: typeof ChangelogIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/': {
      id: '/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/changelog/$id/edit': {
      id: '/changelog/$id/edit'
      path: '/edit'
      fullPath: '/changelog/$id/edit'
      preLoaderRoute: typeof ChangelogIdEditLazyImport
      parentRoute: typeof ChangelogIdLazyImport
    }
  }
}

// Create and export the route tree

interface ChangelogIdLazyRouteChildren {
  ChangelogIdEditLazyRoute: typeof ChangelogIdEditLazyRoute
}

const ChangelogIdLazyRouteChildren: ChangelogIdLazyRouteChildren = {
  ChangelogIdEditLazyRoute: ChangelogIdEditLazyRoute,
}

const ChangelogIdLazyRouteWithChildren = ChangelogIdLazyRoute._addFileChildren(
  ChangelogIdLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/changelog/$id': typeof ChangelogIdLazyRouteWithChildren
  '/changelog/create': typeof ChangelogCreateLazyRoute
  '/changelog': typeof ChangelogIndexLazyRoute
  '/user': typeof UserIndexLazyRoute
  '/changelog/$id/edit': typeof ChangelogIdEditLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/changelog/$id': typeof ChangelogIdLazyRouteWithChildren
  '/changelog/create': typeof ChangelogCreateLazyRoute
  '/changelog': typeof ChangelogIndexLazyRoute
  '/user': typeof UserIndexLazyRoute
  '/changelog/$id/edit': typeof ChangelogIdEditLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/changelog/$id': typeof ChangelogIdLazyRouteWithChildren
  '/changelog/create': typeof ChangelogCreateLazyRoute
  '/changelog/': typeof ChangelogIndexLazyRoute
  '/user/': typeof UserIndexLazyRoute
  '/changelog/$id/edit': typeof ChangelogIdEditLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/changelog/$id'
    | '/changelog/create'
    | '/changelog'
    | '/user'
    | '/changelog/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/changelog/$id'
    | '/changelog/create'
    | '/changelog'
    | '/user'
    | '/changelog/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/changelog/$id'
    | '/changelog/create'
    | '/changelog/'
    | '/user/'
    | '/changelog/$id/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ChangelogIdLazyRoute: typeof ChangelogIdLazyRouteWithChildren
  ChangelogCreateLazyRoute: typeof ChangelogCreateLazyRoute
  ChangelogIndexLazyRoute: typeof ChangelogIndexLazyRoute
  UserIndexLazyRoute: typeof UserIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ChangelogIdLazyRoute: ChangelogIdLazyRouteWithChildren,
  ChangelogCreateLazyRoute: ChangelogCreateLazyRoute,
  ChangelogIndexLazyRoute: ChangelogIndexLazyRoute,
  UserIndexLazyRoute: UserIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/changelog/$id",
        "/changelog/create",
        "/changelog/",
        "/user/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/changelog/$id": {
      "filePath": "changelog.$id.lazy.tsx",
      "children": [
        "/changelog/$id/edit"
      ]
    },
    "/changelog/create": {
      "filePath": "changelog.create.lazy.tsx"
    },
    "/changelog/": {
      "filePath": "changelog.index.lazy.tsx"
    },
    "/user/": {
      "filePath": "user/index.lazy.tsx"
    },
    "/changelog/$id/edit": {
      "filePath": "changelog.$id.edit.lazy.tsx",
      "parent": "/changelog/$id"
    }
  }
}
ROUTE_MANIFEST_END */

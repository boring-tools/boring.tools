/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const UserIndexLazyImport = createFileRoute('/user/')()
const ChangelogIndexLazyImport = createFileRoute('/changelog/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const UserIndexLazyRoute = UserIndexLazyImport.update({
  path: '/user/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/user/index.lazy').then((d) => d.Route))

const ChangelogIndexLazyRoute = ChangelogIndexLazyImport.update({
  path: '/changelog/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/changelog/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/changelog/': {
      id: '/changelog/'
      path: '/changelog'
      fullPath: '/changelog'
      preLoaderRoute: typeof ChangelogIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/': {
      id: '/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/changelog': typeof ChangelogIndexLazyRoute
  '/user': typeof UserIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/changelog': typeof ChangelogIndexLazyRoute
  '/user': typeof UserIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/changelog/': typeof ChangelogIndexLazyRoute
  '/user/': typeof UserIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/changelog' | '/user'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/changelog' | '/user'
  id: '__root__' | '/' | '/changelog/' | '/user/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ChangelogIndexLazyRoute: typeof ChangelogIndexLazyRoute
  UserIndexLazyRoute: typeof UserIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ChangelogIndexLazyRoute: ChangelogIndexLazyRoute,
  UserIndexLazyRoute: UserIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/changelog/",
        "/user/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/changelog/": {
      "filePath": "changelog/index.lazy.tsx"
    },
    "/user/": {
      "filePath": "user/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
